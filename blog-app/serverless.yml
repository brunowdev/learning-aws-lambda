service: blog

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  createArticle:
    handler: articles/create.handler
    events:
      - http:
          path: articles
          method: post
  getArticle:
    handler: articles/get.handler
    events:
      - http:
          path: articles
          method: get
  updateArticle:
    handler: articles/put.handler
    events:
      - http:
          path: articles
          method: put
  deleteArticle:
    handler: articles/delete.handler
    events:
      - http:
          path: articles
          method: delete        
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# Dynamo configuration
resources:
  Resources:
    BlogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: BlogTable
        AttributeDefinitions: 
         - AttributeName: article_id
           AttributeType: S
        KeySchema:
         - AttributeName: article_id
           KeyType: HASH
        ProvisionedThroughput:
           ReadCapacityUnits: 1
           WriteCapacityUnits: 1
